# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()


class CharacterDialogExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = CharacterDialogExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsCharacterDialogExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # CharacterDialogExcel

    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # CharacterDialogExcel
    def CharacterId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CharacterDialogExcel
    def CostumeUniqueId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CharacterDialogExcel
    def DisplayOrder(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CharacterDialogExcel
    def ProductionStep(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(
            self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CharacterDialogExcel
    def DialogCategory(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(
            self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CharacterDialogExcel
    def DialogCondition(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(
            self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CharacterDialogExcel
    def Anniversary(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(
            self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CharacterDialogExcel
    def StartDate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(
            self._tab.Offset(18))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CharacterDialogExcel
    def EndDate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(
            self._tab.Offset(20))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CharacterDialogExcel
    def GroupId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(
            self._tab.Offset(22))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CharacterDialogExcel
    def DialogType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(
            self._tab.Offset(24))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CharacterDialogExcel
    def ActionName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(
            self._tab.Offset(26))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CharacterDialogExcel
    def Duration(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(
            self._tab.Offset(28))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CharacterDialogExcel
    def AnimationName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(
            self._tab.Offset(30))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CharacterDialogExcel
    def LocalizeKR(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(
            self._tab.Offset(32))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CharacterDialogExcel
    def LocalizeJP(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(
            self._tab.Offset(34))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CharacterDialogExcel
    def VoiceId(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(
            self._tab.Offset(36))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return 0

    # CharacterDialogExcel
    def VoiceIdAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(
            self._tab.Offset(36))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Uint32Flags, o)
        return 0

    # CharacterDialogExcel
    def VoiceIdLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(
            self._tab.Offset(36))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # CharacterDialogExcel
    def VoiceIdIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(
            self._tab.Offset(36))
        return o == 0

    # CharacterDialogExcel
    def ApplyPosition(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(
            self._tab.Offset(38))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # CharacterDialogExcel
    def PosX(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(
            self._tab.Offset(40))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # CharacterDialogExcel
    def PosY(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(
            self._tab.Offset(42))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # CharacterDialogExcel
    def CollectionVisible(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(
            self._tab.Offset(44))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # CharacterDialogExcel
    def CVCollectionType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(
            self._tab.Offset(46))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CharacterDialogExcel
    def UnlockFavorRank(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(
            self._tab.Offset(48))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CharacterDialogExcel
    def UnlockEquipWeapon(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(
            self._tab.Offset(50))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # CharacterDialogExcel
    def LocalizeCVGroup(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(
            self._tab.Offset(52))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None


def Start(builder): builder.StartObject(25)


def CharacterDialogExcelStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)


def AddCharacterId(builder, CharacterId): builder.PrependInt64Slot(
    0, CharacterId, 0)


def CharacterDialogExcelAddCharacterId(builder, CharacterId):
    """This method is deprecated. Please switch to AddCharacterId."""
    return AddCharacterId(builder, CharacterId)


def AddCostumeUniqueId(builder, CostumeUniqueId): builder.PrependInt64Slot(
    1, CostumeUniqueId, 0)


def CharacterDialogExcelAddCostumeUniqueId(builder, CostumeUniqueId):
    """This method is deprecated. Please switch to AddCostumeUniqueId."""
    return AddCostumeUniqueId(builder, CostumeUniqueId)


def AddDisplayOrder(builder, DisplayOrder): builder.PrependInt64Slot(
    2, DisplayOrder, 0)


def CharacterDialogExcelAddDisplayOrder(builder, DisplayOrder):
    """This method is deprecated. Please switch to AddDisplayOrder."""
    return AddDisplayOrder(builder, DisplayOrder)


def AddProductionStep(builder, ProductionStep): builder.PrependInt32Slot(
    3, ProductionStep, 0)


def CharacterDialogExcelAddProductionStep(builder, ProductionStep):
    """This method is deprecated. Please switch to AddProductionStep."""
    return AddProductionStep(builder, ProductionStep)


def AddDialogCategory(builder, DialogCategory): builder.PrependInt32Slot(
    4, DialogCategory, 0)


def CharacterDialogExcelAddDialogCategory(builder, DialogCategory):
    """This method is deprecated. Please switch to AddDialogCategory."""
    return AddDialogCategory(builder, DialogCategory)


def AddDialogCondition(builder, DialogCondition): builder.PrependInt32Slot(
    5, DialogCondition, 0)


def CharacterDialogExcelAddDialogCondition(builder, DialogCondition):
    """This method is deprecated. Please switch to AddDialogCondition."""
    return AddDialogCondition(builder, DialogCondition)


def AddAnniversary(builder, Anniversary): builder.PrependInt32Slot(
    6, Anniversary, 0)


def CharacterDialogExcelAddAnniversary(builder, Anniversary):
    """This method is deprecated. Please switch to AddAnniversary."""
    return AddAnniversary(builder, Anniversary)


def AddStartDate(builder, StartDate): builder.PrependUOffsetTRelativeSlot(
    7, flatbuffers.number_types.UOffsetTFlags.py_type(StartDate), 0)


def CharacterDialogExcelAddStartDate(builder, StartDate):
    """This method is deprecated. Please switch to AddStartDate."""
    return AddStartDate(builder, StartDate)


def AddEndDate(builder, EndDate): builder.PrependUOffsetTRelativeSlot(
    8, flatbuffers.number_types.UOffsetTFlags.py_type(EndDate), 0)


def CharacterDialogExcelAddEndDate(builder, EndDate):
    """This method is deprecated. Please switch to AddEndDate."""
    return AddEndDate(builder, EndDate)


def AddGroupId(builder, GroupId): builder.PrependInt64Slot(9, GroupId, 0)


def CharacterDialogExcelAddGroupId(builder, GroupId):
    """This method is deprecated. Please switch to AddGroupId."""
    return AddGroupId(builder, GroupId)


def AddDialogType(builder, DialogType): builder.PrependInt32Slot(
    10, DialogType, 0)


def CharacterDialogExcelAddDialogType(builder, DialogType):
    """This method is deprecated. Please switch to AddDialogType."""
    return AddDialogType(builder, DialogType)


def AddActionName(builder, ActionName): builder.PrependUOffsetTRelativeSlot(
    11, flatbuffers.number_types.UOffsetTFlags.py_type(ActionName), 0)


def CharacterDialogExcelAddActionName(builder, ActionName):
    """This method is deprecated. Please switch to AddActionName."""
    return AddActionName(builder, ActionName)


def AddDuration(builder, Duration): builder.PrependInt64Slot(12, Duration, 0)


def CharacterDialogExcelAddDuration(builder, Duration):
    """This method is deprecated. Please switch to AddDuration."""
    return AddDuration(builder, Duration)


def AddAnimationName(builder, AnimationName): builder.PrependUOffsetTRelativeSlot(
    13, flatbuffers.number_types.UOffsetTFlags.py_type(AnimationName), 0)


def CharacterDialogExcelAddAnimationName(builder, AnimationName):
    """This method is deprecated. Please switch to AddAnimationName."""
    return AddAnimationName(builder, AnimationName)


def AddLocalizeKR(builder, LocalizeKR): builder.PrependUOffsetTRelativeSlot(
    14, flatbuffers.number_types.UOffsetTFlags.py_type(LocalizeKR), 0)


def CharacterDialogExcelAddLocalizeKR(builder, LocalizeKR):
    """This method is deprecated. Please switch to AddLocalizeKR."""
    return AddLocalizeKR(builder, LocalizeKR)


def AddLocalizeJP(builder, LocalizeJP): builder.PrependUOffsetTRelativeSlot(
    15, flatbuffers.number_types.UOffsetTFlags.py_type(LocalizeJP), 0)


def CharacterDialogExcelAddLocalizeJP(builder, LocalizeJP):
    """This method is deprecated. Please switch to AddLocalizeJP."""
    return AddLocalizeJP(builder, LocalizeJP)


def AddVoiceId(builder, VoiceId): builder.PrependUOffsetTRelativeSlot(
    16, flatbuffers.number_types.UOffsetTFlags.py_type(VoiceId), 0)


def CharacterDialogExcelAddVoiceId(builder, VoiceId):
    """This method is deprecated. Please switch to AddVoiceId."""
    return AddVoiceId(builder, VoiceId)


def StartVoiceIdVector(
    builder, numElems): return builder.StartVector(4, numElems, 4)


def CharacterDialogExcelStartVoiceIdVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartVoiceIdVector(builder, numElems)


def AddApplyPosition(builder, ApplyPosition): builder.PrependBoolSlot(
    17, ApplyPosition, 0)


def CharacterDialogExcelAddApplyPosition(builder, ApplyPosition):
    """This method is deprecated. Please switch to AddApplyPosition."""
    return AddApplyPosition(builder, ApplyPosition)


def AddPosX(builder, PosX): builder.PrependFloat32Slot(18, PosX, 0.0)


def CharacterDialogExcelAddPosX(builder, PosX):
    """This method is deprecated. Please switch to AddPosX."""
    return AddPosX(builder, PosX)


def AddPosY(builder, PosY): builder.PrependFloat32Slot(19, PosY, 0.0)


def CharacterDialogExcelAddPosY(builder, PosY):
    """This method is deprecated. Please switch to AddPosY."""
    return AddPosY(builder, PosY)


def AddCollectionVisible(builder, CollectionVisible): builder.PrependBoolSlot(
    20, CollectionVisible, 0)


def CharacterDialogExcelAddCollectionVisible(builder, CollectionVisible):
    """This method is deprecated. Please switch to AddCollectionVisible."""
    return AddCollectionVisible(builder, CollectionVisible)


def AddCVCollectionType(builder, CVCollectionType): builder.PrependInt32Slot(
    21, CVCollectionType, 0)


def CharacterDialogExcelAddCVCollectionType(builder, CVCollectionType):
    """This method is deprecated. Please switch to AddCVCollectionType."""
    return AddCVCollectionType(builder, CVCollectionType)


def AddUnlockFavorRank(builder, UnlockFavorRank): builder.PrependInt64Slot(
    22, UnlockFavorRank, 0)


def CharacterDialogExcelAddUnlockFavorRank(builder, UnlockFavorRank):
    """This method is deprecated. Please switch to AddUnlockFavorRank."""
    return AddUnlockFavorRank(builder, UnlockFavorRank)


def AddUnlockEquipWeapon(builder, UnlockEquipWeapon): builder.PrependBoolSlot(
    23, UnlockEquipWeapon, 0)


def CharacterDialogExcelAddUnlockEquipWeapon(builder, UnlockEquipWeapon):
    """This method is deprecated. Please switch to AddUnlockEquipWeapon."""
    return AddUnlockEquipWeapon(builder, UnlockEquipWeapon)


def AddLocalizeCVGroup(builder, LocalizeCVGroup): builder.PrependUOffsetTRelativeSlot(
    24, flatbuffers.number_types.UOffsetTFlags.py_type(LocalizeCVGroup), 0)


def CharacterDialogExcelAddLocalizeCVGroup(builder, LocalizeCVGroup):
    """This method is deprecated. Please switch to AddLocalizeCVGroup."""
    return AddLocalizeCVGroup(builder, LocalizeCVGroup)


def End(builder): return builder.EndObject()


def CharacterDialogExcelEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)
